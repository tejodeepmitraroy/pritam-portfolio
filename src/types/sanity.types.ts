/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type About = {
	_id: string;
	_type: 'about';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	paragraph?: string;
	paragraph2?: string;
};

export type Enquiry = {
	_id: string;
	_type: 'enquiry';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: string;
	email?: string;
	message?: string;
	createdAt?: string;
};

export type TermsConditions = {
	_id: string;
	_type: 'termsConditions';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: string;
	terms?: Array<{
		children?: Array<{
			marks?: Array<string>;
			text?: string;
			_type: 'span';
			_key: string;
		}>;
		style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
		listItem?: 'bullet' | 'number';
		markDefs?: Array<{
			href?: string;
			_type: 'link';
			_key: string;
		}>;
		level?: number;
		_type: 'block';
		_key: string;
	}>;
};

export type RefundPolicy = {
	_id: string;
	_type: 'refundPolicy';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: string;
	policy?: Array<{
		children?: Array<{
			marks?: Array<string>;
			text?: string;
			_type: 'span';
			_key: string;
		}>;
		style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
		listItem?: 'bullet' | 'number';
		markDefs?: Array<{
			href?: string;
			_type: 'link';
			_key: string;
		}>;
		level?: number;
		_type: 'block';
		_key: string;
	}>;
};

export type PrivacyPolicy = {
	_id: string;
	_type: 'privacyPolicy';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: string;
	policy?: Array<{
		children?: Array<{
			marks?: Array<string>;
			text?: string;
			_type: 'span';
			_key: string;
		}>;
		style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
		listItem?: 'bullet' | 'number';
		markDefs?: Array<{
			href?: string;
			_type: 'link';
			_key: string;
		}>;
		level?: number;
		_type: 'block';
		_key: string;
	}>;
};

export type Blogs = {
	_id: string;
	_type: 'blogs';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	slug?: Slug;
	featured?: boolean;
	description?: string;
	thumbnail?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	category?: string;
	avgReadingTime?: number;
	author?: {
		name?: string;
		image?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			media?: unknown;
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			_type: 'image';
		};
		twitter?: string;
		linkedIn?: string;
	};
	content?: Array<
		| {
				children?: Array<{
					marks?: Array<string>;
					text?: string;
					_type: 'span';
					_key: string;
				}>;
				style?:
					| 'normal'
					| 'h1'
					| 'h2'
					| 'h3'
					| 'h4'
					| 'h5'
					| 'h6'
					| 'blockquote';
				listItem?: 'bullet' | 'number';
				markDefs?: Array<{
					href?: string;
					_type: 'link';
					_key: string;
				}>;
				level?: number;
				_type: 'block';
				_key: string;
		  }
		| {
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
				};
				media?: unknown;
				_type: 'file';
				_key: string;
		  }
		| {
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				media?: unknown;
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt?: string;
				_type: 'image';
				_key: string;
		  }
	>;
};

export type Skills = {
	_id: string;
	_type: 'skills';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	sequence?: number;
	name?: string;
	subtitle?: string;
	percentage?: number;
};

export type Testimonial = {
	_id: string;
	_type: 'testimonial';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	id?: number;
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	name?: string;
	subtitle?: string;
	feedback?: string;
};

export type Services = {
	_id: string;
	_type: 'services';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	id?: number;
	title?: string;
	description?: string;
};

export type Projects = {
	_id: string;
	_type: 'projects';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	slug?: Slug;
	thumbnail?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	projects?: Array<{
		thumbnail?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			media?: unknown;
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			alt?: string;
			_type: 'image';
		};
		title?: string;
		description?: string;
		service?: string;
		link?: string;
		date?: string;
		preview?: Array<{
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			media?: unknown;
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			_type: 'image';
			_key: string;
		}>;
		_type: 'project';
		_key: string;
	}>;
};

export type SocialLinks = {
	_id: string;
	_type: 'socialLinks';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	sequence?: number;
	name?:
		| 'facebook'
		| 'twitter'
		| 'instagram'
		| 'linkedin'
		| 'youtube'
		| 'pinterest'
		| 'tiktok'
		| 'x'
		| 'dribbble'
		| 'behance';
	url?: string;
};

export type Experience = {
	_id: string;
	_type: 'experience';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	position?: string;
	company?: string;
	timeRange?: string;
	description?: string;
};

export type BasicInfo = {
	_id: string;
	_type: 'basicInfo';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: string;
	profilePic?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	age?: string;
	subtitle?: string;
	phone?: string;
	mail?: string;
	homePic?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	experienceYears?: string;
	projectDone?: string;
	location?: string;
};

export type MediaTag = {
	_id: string;
	_type: 'media.tag';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: Slug;
};

export type SanityImagePaletteSwatch = {
	_type: 'sanity.imagePaletteSwatch';
	background?: string;
	foreground?: string;
	population?: number;
	title?: string;
};

export type SanityImagePalette = {
	_type: 'sanity.imagePalette';
	darkMuted?: SanityImagePaletteSwatch;
	lightVibrant?: SanityImagePaletteSwatch;
	darkVibrant?: SanityImagePaletteSwatch;
	vibrant?: SanityImagePaletteSwatch;
	dominant?: SanityImagePaletteSwatch;
	lightMuted?: SanityImagePaletteSwatch;
	muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
	_type: 'sanity.imageDimensions';
	height?: number;
	width?: number;
	aspectRatio?: number;
};

export type SanityImageHotspot = {
	_type: 'sanity.imageHotspot';
	x?: number;
	y?: number;
	height?: number;
	width?: number;
};

export type SanityImageCrop = {
	_type: 'sanity.imageCrop';
	top?: number;
	bottom?: number;
	left?: number;
	right?: number;
};

export type SanityFileAsset = {
	_id: string;
	_type: 'sanity.fileAsset';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	originalFilename?: string;
	label?: string;
	title?: string;
	description?: string;
	altText?: string;
	sha1hash?: string;
	extension?: string;
	mimeType?: string;
	size?: number;
	assetId?: string;
	uploadId?: string;
	path?: string;
	url?: string;
	source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
	_id: string;
	_type: 'sanity.imageAsset';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	originalFilename?: string;
	label?: string;
	title?: string;
	description?: string;
	altText?: string;
	sha1hash?: string;
	extension?: string;
	mimeType?: string;
	size?: number;
	assetId?: string;
	uploadId?: string;
	path?: string;
	url?: string;
	metadata?: SanityImageMetadata;
	source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
	_type: 'sanity.imageMetadata';
	location?: Geopoint;
	dimensions?: SanityImageDimensions;
	palette?: SanityImagePalette;
	lqip?: string;
	blurHash?: string;
	hasAlpha?: boolean;
	isOpaque?: boolean;
};

export type Geopoint = {
	_type: 'geopoint';
	lat?: number;
	lng?: number;
	alt?: number;
};

export type Slug = {
	_type: 'slug';
	current?: string;
	source?: string;
};

export type SanityAssetSourceData = {
	_type: 'sanity.assetSourceData';
	name?: string;
	id?: string;
	url?: string;
};

export type AllSanitySchemaTypes =
	| About
	| Enquiry
	| TermsConditions
	| RefundPolicy
	| PrivacyPolicy
	| Blogs
	| Skills
	| Testimonial
	| Services
	| Projects
	| SocialLinks
	| Experience
	| BasicInfo
	| MediaTag
	| SanityImagePaletteSwatch
	| SanityImagePalette
	| SanityImageDimensions
	| SanityImageHotspot
	| SanityImageCrop
	| SanityFileAsset
	| SanityImageAsset
	| SanityImageMetadata
	| Geopoint
	| Slug
	| SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
